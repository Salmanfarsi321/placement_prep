bool isvalid(string str){
    stack<int>stk;
    for(int i=0;i<str.size();i++) {
        if(str[i]=='(')
        stk.push('(');
        if(str[i]==')'){
            if(stk.empty())
            return false;
            stk.pop();
        }
    }
    if(stk.empty()) return true;
    return false;
}

void solve(int i,int A,string &temp,vector<string>&res){
    if(i==A){
        if(isvalid(temp))
        res.push_back(temp);
        return;
    }
    if(i>A) return;
    temp+='(';
    solve(i+1,A,temp,res);
    temp.pop_back();
    temp+=')';
    solve(i+1,A,temp,res);
    temp.pop_back();
}

vector<string> Solution::generateParenthesis(int A) {
    vector<string>res;
    string temp="";
    solve(0,2*A,temp,res);
    return res;
}
