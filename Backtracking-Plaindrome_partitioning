bool ispalindrome(string str,int i,int j){
    while(i<j){
        if(str[i]!=str[j])
        return false;
        i++;
        j--;
    }
    return true;
}

void solve(int i,string A,vector<string>&temp,vector<vector<string>>&res){
    if(i==A.size()){
        res.push_back(temp);
        return;
    }   
    if(i>A.size()) return;
    for(int x=i;x<A.size();x++){
        if(ispalindrome(A,i,x)){
            temp.push_back(A.substr(i,x-i+1));
            solve(x+1,A,temp,res);
            temp.pop_back();
        }
    }
}

vector<vector<string> > Solution::partition(string A) {
   vector<vector<string> >res;
   vector<string>temp;
   solve(0,A,temp,res);
   sort(res.begin(),res.end());
   return res;
}
