bool isvalid(vector<vector<char> >&A,int row,int col,char x){
    int box_start_row=row-row%3;
    int box_start_col=col-col%3;
    for(int i=0;i<9;i++){
        if(A[i][col]==x) return false;
    }
    
    for(int i=0;i<9;i++){
        if(A[row][i]==x) return false;
    }
    
    for(int i=0;i<3;i++){
        for(int j=0;j<3;j++){
            if(A[i+box_start_row][j+box_start_col]==x) return false;
        }
    }
    return true;
}


bool solve(vector<vector<char> >&A,int row,int col){
    if(row==9) return true;
    if(col==9) return solve(A,row+1,0);   // Move to next row if this is the last column
    if(A[row][col]!='.')          // If already assigned,don't assign it
        return solve(A,row,col+1);
    for(char i='1';i<='9';i++){
        if(isvalid(A,row,col,i)){
        A[row][col]=i;
        if(solve(A,row,col+1)) 
        return true;
        A[row][col]='.';
        }
    }
    return false;
}

void Solution::solveSudoku(vector<vector<char> > &A) {
    solve(A,0,0);
}
