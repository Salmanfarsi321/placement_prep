*/Given a set of distinct integers, S, return all possible subsets.

 Note:
Elements in a subset must be in non-descending order.
The solution set must not contain duplicate subsets.
Also, the subsets should be sorted in ascending ( lexicographic ) order.
The list is not necessarily sorted.
Example :

If S = [1,2,3], a solution is:

[
  [],
  [1],
  [1, 2],
  [1, 2, 3],
  [1, 3],
  [2],
  [2, 3],
  [3],
]*/

void solve(int start,vector<int> &A,vector<int>&row,vector<vector<int>>&res){
    res.push_back(row);
    for(int i=start;i<A.size();i++){
    row.emplace_back(A[i]);
    solve(i+1,A,row,res);
    row.pop_back();
    }
}

vector<vector<int> > Solution::subsets(vector<int> &A) {
    int n=A.size();
    vector<vector<int> >res;
    vector<int>row;
    sort(A.begin(),A.end());
    solve(0,A,row,res);
    sort(res.begin(),res.end());
    return res;
}
