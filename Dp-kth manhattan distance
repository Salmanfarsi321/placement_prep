int mx(int a,int b,int c,int d,int e){
    int maxi;
    maxi=max(a,max(b,max(c,max(d,e))));
    return maxi;
}

vector<vector<int> > Solution::solve(int A, vector<vector<int> > &B) {
    int row=B.size();
    int col=B[0].size();
    vector<vector<int> >next=B;
    vector<vector<int> >curr=B;
    for(int k=0;k<A;k++){
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                int left=(j==col-1) ? -1:curr[i][j+1];
                int right=(j==0) ? -1:curr[i][j-1];
                int up=(i==0) ? -1:curr[i-1][j];
                int down=(i==row-1) ? -1:curr[i+1][j];
                next[i][j]=mx(curr[i][j],left,right,up,down);
            }
        }
        curr=next;
    }
    return curr;
}
